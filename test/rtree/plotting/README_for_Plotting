PLOTs in CCPE article:
---------------------------
You do not need to activate GnuPlot. You may Run sh files under /plotting to plot data, query and Leaf MBRs of R*-tree, STR-tree and Adp-STR-tree.
Use dataset size as the input for data plotting, query AQAR as the input for query plotting.
$ pltdata-draw.sh -d10000    (-d10000 is optional) 
$ pltquery-draw.sh -a0.3      (-a: aspect ratio. is must. -d100 is optional)
$ pltDynLevel0-draw.sh -d10000  (-d10000 is optional)
$ pltSTRLevel0-draw.sh -d10000 -a10  (-a: aspect ratio. is must. -d10000 is optional)
$ pltPointData-draw.sh 0 1.2 0 1.2   (Bunlar "minx maxx miny maxy" arg alıyor. Onceki diger plt script'lerinde de ihtiyaca gore bunlar dışardan alınabilir) 
$ pltRegionData-draw.sh 0 1.2 0 1.2  










##############################################
BELOW is OLD PLOTTINGS...( Sadece fikir vermesi adına burada biraktım)

Run "gnuplot" in the /test5 directory

1-) first Part: Generate data set and Load trees. you may plot data & query & Leaf MBRs with the following #gnuplot> specifications:
The following settings are stored in "plt...-draw" files.
[pltdata-draw]
set title "Data Set in Unit Area"
set xlabel "x"
set ylabel "y"
set xrange[0:1.2]
set yrange[0:1.2]
set style line 1 lc rgb 'black' pt 7 pointsize 0.3   # unset style line 1
plot "pltdata" using 1:2 w p title "point" ls 1  #-->> POINT data set
plot "pltdata" using 1:2 w l title "region" ls 2  -->> REGION data set

[pltDynLevel0-draw, pltSTRLevel0_*-draw]
set style line 2 lc rgb 'black' linetype 1 lw 1  # unset style line 2
plot "pltDynLevel0" using 1:2 w l  title "Leaf-MBR" ls 2
plot "pltSTRLevel0_1" using 1:2 w l  title "Leaf-MBR" ls 2

2-) At the end of part-2: You may plot query sets each of which has different AQAR(01,07,03,1,14,33,10)
[pltquery-draw]
plot "pltquery01" using 1:2 w l, "pltquery10" using 1:2 w l lw 1

3-) At the end of part-3: (and Query Exec Perf. Results in "RES" file)
[pltIdxSensToAQAR-draw]
set title "Query Exec. Latency's Sensitivity to AQAR (DS=10K, Query Area=16e-4)"
set xlabel "AQAR"
set ylabel "Latency"
set xrange[0.1:10]
set yrange[10:100]
set logscale x 2                    # veriye göre 10, 2, 4 gibi oynamalar yaparak güzel şekil oluşturabilirsin..
plot "...RES" using 1:2 w lp title "R*tree", "...RES" using 1:3 w lp title "STR-tree", "...RES" using 1:4 w lp title "AdpSTR-tree"


4-) Plot DS vs Query Eff. with fix "AQAR=01" and "Area=81e-4"
set title "Query Efficiency vs Data Set size (AQAR=0.1, Query Area=81e-4)"
set xlabel "Data Set Size"
set ylabel "Number Of Nodes Read"
set logscale x 10                    # veriye göre 10, 2, 4 gibi oynamalar yaparak güzel şekil oluşturabilirsin..
plot "RES_AQAR01_Area81" using 1:2 w lp title "R*tree", "RES_AQAR01_Area81" using 1:3 w lp title "STR-tree", "RES_AQAR01_Area81" using 1:4 w lp title "AdpSTR-tree"


5-) FOR CLUSTERED GRAPHS:
#gnuplot> load 'PLTCMD_clustered'



##############################################

BELOW is VERY OLD PLOTTINGS...( Sadece fikir vermesi adına burada biraktım)

# TEST #1:
#--------------------
# WL aspect-ratio(qx/qy) change effect on "Dyn tree query performance  ( # of READS)"
# DS: 50.000
# dx=dy= 0.01  fix.  Alan: 1e-4
# Query Set Size=100
# aspect ration=r= qx/qy changes from   0.01  0.25   1   4   100
# qx/qy= 0.001/0.1 ,   0.005/0.02,   0.01/0.01,    0.1/0.001,   0.02/0.005.   Alan== 1e-4

#gnuplot> set xlabel "En/Boy"
#gnuplot> set ylabel "Okunan Sayfa Sayisi"
#gnuplot> set title "Sorgu Veriminin Is Yukune Duyarliligi"
#gnuplot> set xrange[0.01:100]
#gnuplot> set logscale x 10                    # veriye göre 10, 2, 4 gibi oynamalar yaparak güzel şekil oluşturabilirsin..
#gnuplot> plot "pltWLchangeOn-Dyn-STR" using 3:4 w lp title "R*tree", "pltWLchangeOn-Dyn-STR" using 3:5 w lp title "STR-tree"

# a-)

#qx     qy    	r   	R*tree-disk-IO     STR-tree-disk-io			Adaptif STR-disk-io
#0.001	0.1		0.01		639					566							278
#0.005	0.02	0.25		367					304							293
#0.01	0.01	1			349					283							283
#0.02	0.005	4			379					331							302
#0.1		0.001	100			677					565							271

#b-)  aqar=0.01 is too much. Thus I reduced the end limits: 0.1  0.3  0.7  "1" 1.428   3.33  10

# WL aspect-ratio(qx/qy) change effect on "Dyn tree query performance  ( # of READS)"
# DS: 50.000
# dx=dy= 0.01  fix.  Alan: 1e-4  (  0.01*0.01)
# Query Set Size=100
# Query Ave. Aspect Ratio=r= qx/qy changes from   0.1   0.3   0.7   1   1.428   3.33    10
#  (1/p) / p*1 = AQAR  ==>  1/ p^2 = 0.1     ==> p^2 = 10    ==> p= 3.16         AQAR=0.1     (0.01/3.16)/0.01*3.16
#					    	1/ p^2 = 0.3     ==> p^2 = 3.333 ==> p= 1.825        AQAR=0.3     (0.01/1.825)/0.01*1.825
#                           1/ p^2 = 0.7     ==> p^2 = 1.428 ==>  p= 1.194       AQAR=0.7     (0.01/1.194)/0.01*1.194
#						    1/ p^2 = 1       ==> p^2 = 1     ==>  p= 1           AQAR=1       (0.01/1)/0.01*1
#						    1/ p^2 = 1.428   ==> p^2 = 0.7 ==>  p= 0.836         AQAR=1.428   (0.01/0.836)/0.01*0.836
#						    1/ p^2 = 3.33       ==> p^2 = 0,3 ==>  p= 0.547		 AQAR=3.33    (0.01/0.547)/0.01*0.547
#						    1/ p^2 = 10       ==> p^2 = 0,1 ==>  p= 0.316		 AQAR=10      (0.01/0.316)/0.01*0.316

#gnuplot> set xlabel "AQAR"
#gnuplot> set ylabel "Number Of Nodes Read"
#gnuplot> set title "The Index's Sensitivity to Workload Ave. Aspect Ratio"
#gnuplot> set xrange[0.1:10]
#gnuplot> set logscale x 2                    # veriye göre 10, 2, 4 gibi oynamalar yaparak güzel şekil oluşturabilirsin..
#gnuplot> plot "pltWLchangeOn-Dyn-STR" using 1:2 w lp title "R*tree", "pltWLchangeOn-Dyn-STR" using 1:3 w lp title "STR-tree", "pltWLchangeOn-Dyn-STR" using 1:4 w lp title "Adaptive-STR-tree"

# AQAR= qx/qy, Area= 0.02 * 0.02 = 4e-4
#AQAR   	R*tree-disk-IO     STR-tree-disk-io			Adaptif STR-disk-io
#-----------------------------------------------------------------------
 0.1		526					482							431
 0.3	    472					440							417
 0.7		454       			426							415
 1			447					425							425
 1.428		459					427							434
 3.33		474					449							426
 10		    526					489							478

# AQAR= qx/qy, Area= 0.03 * 0.03 = 9e-4
#AQAR   	R*tree-disk-IO     STR-tree-disk-io			Adaptif STR-disk-io
#-----------------------------------------------------------------------
# 0.1			655					613						520
# 0.3	    	571					513						494
# 0.7		    558		            495						503
# 1			557					504						504
# 1.428		537					508						498
# 3.33		571					547						498
# 10			674					605						569



# AQAR= qx/qy, Area= 0.05 * 0.05 = 25e-4
#AQAR   	R*tree-disk-IO     STR-tree-disk-io			Adaptif STR-disk-io
#-----------------------------------------------------------------------
# 0.1			854					788					    708
# 0.3	    	796					730						691
# 0.7		    783					682						700
# 1			771					686						686
# 1.428		748					672						709
# 3.33		789					723						699
# 10			955					808						741









